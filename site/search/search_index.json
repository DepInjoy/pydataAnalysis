{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"fundation/","text":"\u81ea\u7701 \u5728\u53d8\u91cf\u540e\u9762\u6dfb\u52a0\uff1f\uff0c\u53ef\u4ee5\u663e\u793a\u5bf9\u8c61\u4fe1\u606f\u3002 b=[1,2,3] b? Type: list String form: [1, 2, 3] Length: 3 Docstring: Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. \u5bf9\u8c61\u7684\u81ea\u7701\uff0c\u5982\u679c\u5bf9\u8c61\u4f1a\u5b9e\u4f8b\u5b9a\u4e49\u8fc7\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u663e\u793a\u4fe1\u606f\u3002 def add_number(a, b): ''' Add two numbers together Return --------- the_sum:type of arguments ''' return a+b \u663e\u793a\u6587\u6863\u5b57\u7b26\u4e32 add_number? \u663e\u793a\u51fd\u6570\u6e90\u7801 add_number?? \u9b54\u672f\u547d\u4ee4 timeit\u6d4b\u8bd5\u8bed\u53e5\u7684\u6267\u884c\u65f6\u95f4 import numpy as np a=np.random.randn(100, 100) %timeit np.dot(a, a) 54 \u00b5s \u00b1 1.05 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each) \u51fd\u6570 \u5bf9\u8c61\u65b9\u6cd5\u8c03\u7528 \u5c5e\u6027\u548c\u65b9\u6cd5 \u9e2d\u5b50\u7c7b\u578b \u4e0d\u5173\u5fc3\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u53ea\u5173\u5fc3\u5bf9\u8c61\u662f\u5426\u6709\u67d0\u79cd\u7528\u9014\u6216\u8005\u65b9\u6cd5\uff0c\u8fd9\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u9e2d\u5b50\u7c7b\u578b\u201d\u3002 \u9a8c\u8bc1\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u9075\u5faa\u8fed\u4ee3\u534f\u8bae\uff0c\u53ef\u8fed\u4ee3\u7684\u610f\u5473\u7740\u5b83\u6709__iter__\u9b54\u672f\u65b9\u6cd5\uff0c\u5224\u65ad\u51fd\u6570\u65f6iter\u51fd\u6570 def isiterable(obj): try: iter(obj) return True except TypeError: return False print(isiterable(\"a string\")) print(isiterable(5)) True False \u5e94\u7528\uff1a\u5b9e\u73b0\u53ef\u4ee5\u63a5\u53d7\u60f9\u4f60\u7c7b\u578b\u7684\u5e8f\u5217\uff08list\u3001tuple\u3001ndarray\uff09\u6216\u8fed\u4ee3\u5668 # \u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u662f\u5217\u8868 if not isinstance(x, list) and isiterable(x): # \u8f6c\u53d8\u4e3a\u5217\u8868 x=list(x) \u6570\u636e\u7c7b\u578b \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u88ab\u6539\u53d8\u7684\uff0c\u4e0d\u80fd\u4fee\u6539\u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u5728\u5b57\u7b26\u4e32\u524d\u9762\u6dfb\u52a0r\uff0c\u4ee3\u8868\u5b57\u7b26\u5c31\u662f\u5176\u81ea\u8eab\u3002 s=r\"This\\has\\no\\special\\characters\\n\" print(s) This\\has\\no\\special\\characters\\n {0:.2f}:\u683c\u5f0f\u5316\u7b2c\u4e00\u4e2a\u53c2\u6570\u5e26\u6709\u4e24\u4e2a\u5c0f\u6570\u7684\u6d6e\u70b9\u6570 {1:s}: \u683c\u5f0f\u5316\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32 {2:d}: \u683c\u5f0f\u5316\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u6574\u6570 tmp='{0:.2f} {1:s} are worth US ${2:d}.' tmp=tmp.format(7.092, \"RMB\", 1) print(tmp) 7.09 RMB are worth US $1. n = '---{:,d}----'.format(10000000) n1 = '---{:.2f} {:,d}----'.format(1.234, 100000005) print(n) print(n1) ---10,000,000---- ---1.23 100,000,005----","title":"Fundation"},{"location":"fundation/#_1","text":"","title":"\u81ea\u7701"},{"location":"fundation/#_2","text":"b=[1,2,3] b? Type: list String form: [1, 2, 3] Length: 3 Docstring: Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"\u5728\u53d8\u91cf\u540e\u9762\u6dfb\u52a0\uff1f\uff0c\u53ef\u4ee5\u663e\u793a\u5bf9\u8c61\u4fe1\u606f\u3002"},{"location":"fundation/#_3","text":"def add_number(a, b): ''' Add two numbers together Return --------- the_sum:type of arguments ''' return a+b \u663e\u793a\u6587\u6863\u5b57\u7b26\u4e32 add_number? \u663e\u793a\u51fd\u6570\u6e90\u7801 add_number??","title":"\u5bf9\u8c61\u7684\u81ea\u7701\uff0c\u5982\u679c\u5bf9\u8c61\u4f1a\u5b9e\u4f8b\u5b9a\u4e49\u8fc7\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u663e\u793a\u4fe1\u606f\u3002"},{"location":"fundation/#_4","text":"timeit\u6d4b\u8bd5\u8bed\u53e5\u7684\u6267\u884c\u65f6\u95f4 import numpy as np a=np.random.randn(100, 100) %timeit np.dot(a, a) 54 \u00b5s \u00b1 1.05 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)","title":"\u9b54\u672f\u547d\u4ee4"},{"location":"fundation/#_5","text":"","title":"\u51fd\u6570"},{"location":"fundation/#_6","text":"","title":"\u5bf9\u8c61\u65b9\u6cd5\u8c03\u7528"},{"location":"fundation/#_7","text":"","title":"\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"fundation/#_8","text":"\u4e0d\u5173\u5fc3\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u53ea\u5173\u5fc3\u5bf9\u8c61\u662f\u5426\u6709\u67d0\u79cd\u7528\u9014\u6216\u8005\u65b9\u6cd5\uff0c\u8fd9\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u9e2d\u5b50\u7c7b\u578b\u201d\u3002 \u9a8c\u8bc1\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u9075\u5faa\u8fed\u4ee3\u534f\u8bae\uff0c\u53ef\u8fed\u4ee3\u7684\u610f\u5473\u7740\u5b83\u6709__iter__\u9b54\u672f\u65b9\u6cd5\uff0c\u5224\u65ad\u51fd\u6570\u65f6iter\u51fd\u6570 def isiterable(obj): try: iter(obj) return True except TypeError: return False print(isiterable(\"a string\")) print(isiterable(5)) True False \u5e94\u7528\uff1a\u5b9e\u73b0\u53ef\u4ee5\u63a5\u53d7\u60f9\u4f60\u7c7b\u578b\u7684\u5e8f\u5217\uff08list\u3001tuple\u3001ndarray\uff09\u6216\u8fed\u4ee3\u5668 # \u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u662f\u5217\u8868 if not isinstance(x, list) and isiterable(x): # \u8f6c\u53d8\u4e3a\u5217\u8868 x=list(x)","title":"\u9e2d\u5b50\u7c7b\u578b"},{"location":"fundation/#_9","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"fundation/#_10","text":"\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u88ab\u6539\u53d8\u7684\uff0c\u4e0d\u80fd\u4fee\u6539\u5b57\u7b26\u4e32","title":"\u5b57\u7b26\u4e32"},{"location":"fundation/#_11","text":"\u5728\u5b57\u7b26\u4e32\u524d\u9762\u6dfb\u52a0r\uff0c\u4ee3\u8868\u5b57\u7b26\u5c31\u662f\u5176\u81ea\u8eab\u3002 s=r\"This\\has\\no\\special\\characters\\n\" print(s) This\\has\\no\\special\\characters\\n {0:.2f}:\u683c\u5f0f\u5316\u7b2c\u4e00\u4e2a\u53c2\u6570\u5e26\u6709\u4e24\u4e2a\u5c0f\u6570\u7684\u6d6e\u70b9\u6570 {1:s}: \u683c\u5f0f\u5316\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32 {2:d}: \u683c\u5f0f\u5316\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u6574\u6570 tmp='{0:.2f} {1:s} are worth US ${2:d}.' tmp=tmp.format(7.092, \"RMB\", 1) print(tmp) 7.09 RMB are worth US $1. n = '---{:,d}----'.format(10000000) n1 = '---{:.2f} {:,d}----'.format(1.234, 100000005) print(n) print(n1) ---10,000,000---- ---1.23 100,000,005----","title":"\u5b57\u7b26\u4e32\u683c\u5f0f\u5316"}]}